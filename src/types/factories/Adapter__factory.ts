/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Adapter, AdapterInterface } from "../Adapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBmin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "allPairsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "createPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002e2e38038062002e2e833981810160405281019062000037919062000231565b6200006b7f4784b5996e3ce0c9bc05a64b1110a2baea2b0d8e3ccd91e2c53acab7b425126360001b620001c460201b60201c565b6200009f7f68ed2d56550e42f7c888e8e6ce5909a79f4ae19bc19371dfb86ab757efd41bab60001b620001c460201b60201c565b620000d37fca8a8fcab604bc82d75b66dc0b1b5a3cd0cd7726b7965260d71b610f5ab0ff6260001b620001c460201b60201c565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001477fa6e36c89f0df3114c486e1783cd3e24a4442ca1de33142fb1b63122736ea314860001b620001c460201b60201c565b6200017b7f04e34508c480f91f34e5b643d9a11cb2956f827b8568afcf0d62db093093534f60001b620001c460201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000278565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001f982620001cc565b9050919050565b6200020b81620001ec565b81146200021757600080fd5b50565b6000815190506200022b8162000200565b92915050565b600080604083850312156200024b576200024a620001c7565b5b60006200025b858286016200021a565b92505060206200026e858286016200021a565b9150509250929050565b612ba680620002886000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c80631f00ca741461009e57806338ed1739146100ce578063574f2ba3146100fe5780638803dbee1461011c578063baa2abde1461014c578063c45a01551461017d578063c9c653961461019b578063d06ca61f146101cb578063e6a43905146101fb578063e8e337001461022b578063f887ea401461025d575b600080fd5b6100b860048036038101906100b39190611dba565b61027b565b6040516100c59190611ed8565b60405180910390f35b6100e860048036038101906100e39190611f58565b6103be565b6040516100f59190611ed8565b60405180910390f35b6101066106e9565b6040516101139190612001565b60405180910390f35b61013660048036038101906101319190611f58565b610812565b6040516101439190611ed8565b60405180910390f35b6101666004803603810190610161919061201c565b610c0e565b6040516101749291906120be565b60405180910390f35b610185610ff7565b60405161019291906120f6565b60405180910390f35b6101b560048036038101906101b09190612111565b61101b565b6040516101c291906120f6565b60405180910390f35b6101e560048036038101906101e09190611dba565b611156565b6040516101f29190611ed8565b60405180910390f35b61021560048036038101906102109190612111565b611299565b60405161022291906120f6565b60405180910390f35b61024560048036038101906102409190612151565b6113d2565b60405161025493929190612207565b60405180910390f35b610265611966565b60405161027291906120f6565b60405180910390f35b60606102a97f7d055836693071168452007dea6e26b99769ae95f90fbd7ca34049c550f5b64c60001b61198c565b6102d57f9c36f74a0b60b6e252a70a84c985b778bef624dd812d37a6b51ebfe462637b6860001b61198c565b6103017fd011c04d01300248a0399e8562e562dfade7f518346d4a90a523214686663a0860001b61198c565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631f00ca748585856040518463ffffffff1660e01b815260040161036093929190612301565b60006040518083038186803b15801561037857600080fd5b505afa15801561038c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103b59190612497565b90509392505050565b60606103ec7f5b0915da4eea13fb96c27425bd438795f8887ee2f4cf4ddcf65efbbc907c670260001b61198c565b6104187f7635d274f43233970c2e439661d90b5eb604d238f9730e90896c3ef428278acf60001b61198c565b6104447fb75ccc5d8ff7a72be7a5f74357d4d916e0794c2d563055bd64c138912c4c874c60001b61198c565b6104993330898888600081811061045e5761045d6124e0565b5b9050602002016020810190610473919061250f565b73ffffffffffffffffffffffffffffffffffffffff1661198f909392919063ffffffff16565b6104c57f492783d73ddae550399dc562d6e25863b195abb0d41495f7958e7b1e29d454f160001b61198c565b6104f17fbe64ec5d003a2a236538ea7ffc49939b76e5dbcc6f3bf01813c40f0d98caa7a760001b61198c565b84846000818110610505576105046124e0565b5b905060200201602081019061051a919061250f565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16896040518363ffffffff1660e01b815260040161057692919061253c565b602060405180830381600087803b15801561059057600080fd5b505af11580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c8919061259d565b506105f57fb39d4f63540b1212b4730ed685b763b5742afd702f2ed415e24b8f85c98414fa60001b61198c565b6106217f23230567beb0a68eec04788a0ea53009c7ccebe6db7cb086ee1be845b914b70e60001b61198c565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338ed17398888888888886040518763ffffffff1660e01b8152600401610686969594939291906125ca565b600060405180830381600087803b1580156106a057600080fd5b505af11580156106b4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106dd9190612497565b90509695505050505050565b60006107177f80584ec823c535ff22de1f3009e7f27da07e45388177e1e0910de85dae69635860001b61198c565b6107437fb7ddf6d4ee7638ab89f1b7611ff901dcff43bbcbc7a0fe00ab8b83196797a48560001b61198c565b61076f7fc87a3d2a532e0e3452949e0c4c7e3f29d22cf39dca898e583fabd523ff10774460001b61198c565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663574f2ba36040518163ffffffff1660e01b815260040160206040518083038186803b1580156107d557600080fd5b505afa1580156107e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080d9190612626565b905090565b60606108407fe9d03424048212de8c246552d987317deea6402a0d9e28d9b21567ceb961310660001b61198c565b61086c7f4a094c59ad27b739dbe7836c39c220a12db95f56dea6d89f626c708035ece44560001b61198c565b6108987f23d2a093d584a5a9e84443d7894a03d80a7a3b2b2d353bdad71506f6cd20be4560001b61198c565b6108ed333088888860008181106108b2576108b16124e0565b5b90506020020160208101906108c7919061250f565b73ffffffffffffffffffffffffffffffffffffffff1661198f909392919063ffffffff16565b6109197f3963a90beb27481f5721aa092783a2ca533c8ec5bd040bb84f043ea54e323f3560001b61198c565b6109457f0e95dff3e7c44ab748b2ebc15d34c0a8624454e04fab1668747cca58bda21ff760001b61198c565b84846000818110610959576109586124e0565b5b905060200201602081019061096e919061250f565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16886040518363ffffffff1660e01b81526004016109ca92919061253c565b602060405180830381600087803b1580156109e457600080fd5b505af11580156109f8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1c919061259d565b50610a497fd9f1b67c1e4d08d6a7d22fb9401f632d4b5dbdd7331f918dfe026df2fdb1746e60001b61198c565b610a757fc6b1fae63eaad0edcb0a9fb22a896fa7cdfbb867ee7a4e749b007a543dc4ac1f60001b61198c565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638803dbee8888888888886040518763ffffffff1660e01b8152600401610ada969594939291906125ca565b600060405180830381600087803b158015610af457600080fd5b505af1158015610b08573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b319190612497565b9050610b5f7fe9a5a82bc09a3a625001567824097de0dc413613bf07ad7e3f0c1c69e16ebd9360001b61198c565b610b8b7f3db7a303cf95ee7acf0bb80faa90bb0180afdfdbc0e15e7ae074ae4cc070f20660001b61198c565b610c043382600081518110610ba357610ba26124e0565b5b602002602001015188610bb69190612682565b87876000818110610bca57610bc96124e0565b5b9050602002016020810190610bdf919061250f565b73ffffffffffffffffffffffffffffffffffffffff16611a189092919063ffffffff16565b9695505050505050565b600080610c3d7fa02d6f4b666a549390be58b236c7f9c71349aa4927d32dd352891a364a356c6b60001b61198c565b610c697f42b1d1f2d4daae5d6a7aaa9f465e0b6bef33086cfb556dd3d93b9087edb8b6fd60001b61198c565b610c957f3926acc0b3bc0055f126661853df1483312a3e813597088e092e043150a11ff960001b61198c565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e6a439058b8b6040518363ffffffff1660e01b8152600401610cf39291906126b6565b60206040518083038186803b158015610d0b57600080fd5b505afa158015610d1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4391906126f4565b9050610d717f3619f2d2b7e675c52aa75a1bad5089987d9e1ad6dca123ca4e63b613b22afc0360001b61198c565b610d9d7ff4dde84775e08d180e359c3ff63341f4be18cea92d4a3fc317d9a1704e757deb60001b61198c565b610dca33308a8473ffffffffffffffffffffffffffffffffffffffff1661198f909392919063ffffffff16565b610df67f9de4fbeb17c2cfd460779f472a13f54f59c7114a2bfa85a18e31a9726e6933ec60001b61198c565b610e227f935b9dede285afbd0432737498038ce627a653f304a23f10f4eb3815d29735ce60001b61198c565b8073ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168a6040518363ffffffff1660e01b8152600401610e7f92919061253c565b602060405180830381600087803b158015610e9957600080fd5b505af1158015610ead573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed1919061259d565b50610efe7f19298b9773ec70128608529a597b238a20c2c47b55e77866cc18aaf278566d2a60001b61198c565b610f2a7fe8c3ee387cab68e2cab4e3a553b86e77fcad14d89f533fbde4cd45196037107c60001b61198c565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663baa2abde8b8b8b8b8b8b8b6040518863ffffffff1660e01b8152600401610f919796959493929190612721565b6040805180830381600087803b158015610faa57600080fd5b505af1158015610fbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe29190612790565b80935081945050505097509795505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006110497f5398dcecb78711b03a1abf5e40608b3d33ad7106ba66a110169141bd0fb6132c60001b61198c565b6110757fcdad438695c8c60396247f4c2608ca079fe1fb947ac37ad3b42b4c941e941fd060001b61198c565b6110a17fbbc0b98cf8119da0a7727fb4d23e44cbe19984527e111b759114b625430b3a4160001b61198c565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c9c6539684846040518363ffffffff1660e01b81526004016110fc9291906126b6565b602060405180830381600087803b15801561111657600080fd5b505af115801561112a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114e91906126f4565b905092915050565b60606111847f2e58bc5e029a94791a8e211fdf9ad1a83b80cac1c553529c11ceca841a53e36160001b61198c565b6111b07fa6c9e066287e196b9b4d0c2eca74ccc16bcd054e2d9ae70c10b4d08f11cbd8f160001b61198c565b6111dc7f03b2ad5e6482eda2ee4d487de08949cdfdfcba659bf2ed0142adbafbe1f4add360001b61198c565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8585856040518463ffffffff1660e01b815260040161123b93929190612301565b60006040518083038186803b15801561125357600080fd5b505afa158015611267573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906112909190612497565b90509392505050565b60006112c77fb4141a1b9c986ca9fdb3647c0d5bfb22f12d19bb4d44ffea4c66823c8514e8de60001b61198c565b6112f37f122d288a9aeff636b69d7aee50d4d09506f26fd8b49d00f8162b8d367c4f926660001b61198c565b61131f7f6db154b78db6bea85f7fdbb5841e3abea45a1790a1ff4e6e91e17eb2f65e14af60001b61198c565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e6a4390584846040518363ffffffff1660e01b815260040161137a9291906126b6565b60206040518083038186803b15801561139257600080fd5b505afa1580156113a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ca91906126f4565b905092915050565b60008060006114037fd0a605aad81d56be8569513ca6b65f5e4ba6cd3b6dbaeee54d340c8d9241e3f460001b61198c565b61142f7fc9de09ad0ed2c4bdc94c522c93fdacc0630f657d743877aa57e5548deb8383bc60001b61198c565b61145b7f5b4a50b6ec07b761dcdc0d26890b1e9add193040df1674fa3cf6be98cdae726960001b61198c565b61148833308b8e73ffffffffffffffffffffffffffffffffffffffff1661198f909392919063ffffffff16565b6114b47f3864f52bc26f0935bba91b3dab7ae74244ddbc927782464a140067035d6ab6f560001b61198c565b6114e07fb772c9640b3a90122a504f6b7f8a180a125ad46ebaf3d38eac217bf844ea025d60001b61198c565b61150d33308a8d73ffffffffffffffffffffffffffffffffffffffff1661198f909392919063ffffffff16565b6115397f2b965cd23fa9047bbd06044a8fd29137bee195b3ea97d2feb09096141446be9460001b61198c565b6115657f70406b162685d2bad23b3897722d85f184a1157682cd279b0c41f90523f24a6d60001b61198c565b8a73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168b6040518363ffffffff1660e01b81526004016115c292919061253c565b602060405180830381600087803b1580156115dc57600080fd5b505af11580156115f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611614919061259d565b506116417fb8abea613b54aa25c85c74ed74eeb8bd0714dd7105329c8ad04c2913a07c00b460001b61198c565b61166d7fb90df3b8da283bb0f8d1fd88aabf0a97e51443b7080f5b9c1c75f9fcb7e088a360001b61198c565b8973ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168a6040518363ffffffff1660e01b81526004016116ca92919061253c565b602060405180830381600087803b1580156116e457600080fd5b505af11580156116f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171c919061259d565b506117497fe0f600ed2b7ae1c534bfc8ea868c4d00f57162fead3790cd6e141dce21f1fb8c60001b61198c565b6117757fbc495162ef4e73b94962be5fe48a722c751e646c15103f8a9da383439b474b7160001b61198c565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e8e337008c8c8c8c8c8c8c8c6040518963ffffffff1660e01b81526004016117de9897969594939291906127d0565b606060405180830381600087803b1580156117f857600080fd5b505af115801561180c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611830919061284e565b8093508194508295505050506118687fd939534a50ecd5709f02e62ab25e83219f7e2e7f3a50c82cbfe6a6f8bb1f243e60001b61198c565b6118947fc72d1aa75cfacc7ecf0234e8fdf292d0c93a3b2e45a002848af7281f4bf52b8560001b61198c565b6118ca33848b6118a49190612682565b8d73ffffffffffffffffffffffffffffffffffffffff16611a189092919063ffffffff16565b6118f67fcd29a4727d5eb6976b96e71ded0746beca205839641e099b18a421c659a13f7d60001b61198c565b6119227f5c68936a14b5c18267b3dbecf6281310de7ab1b44e66df45dae82e7936d799a560001b61198c565b61195833838a6119329190612682565b8c73ffffffffffffffffffffffffffffffffffffffff16611a189092919063ffffffff16565b985098509895505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b611a12846323b872dd60e01b8585856040516024016119b0939291906128a1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611a9e565b50505050565b611a998363a9059cbb60e01b8484604051602401611a3792919061253c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611a9e565b505050565b6000611b00826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611b659092919063ffffffff16565b9050600081511115611b605780806020019051810190611b20919061259d565b611b5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b569061295b565b60405180910390fd5b5b505050565b6060611b748484600085611b7d565b90509392505050565b606082471015611bc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bb9906129ed565b60405180910390fd5b611bcb85611c91565b611c0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c0190612a59565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611c339190612af3565b60006040518083038185875af1925050503d8060008114611c70576040519150601f19603f3d011682016040523d82523d6000602084013e611c75565b606091505b5091509150611c85828286611ca4565b92505050949350505050565b600080823b905060008111915050919050565b60608315611cb457829050611d04565b600083511115611cc75782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cfb9190612b4e565b60405180910390fd5b9392505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b611d3281611d1f565b8114611d3d57600080fd5b50565b600081359050611d4f81611d29565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611d7a57611d79611d55565b5b8235905067ffffffffffffffff811115611d9757611d96611d5a565b5b602083019150836020820283011115611db357611db2611d5f565b5b9250929050565b600080600060408486031215611dd357611dd2611d15565b5b6000611de186828701611d40565b935050602084013567ffffffffffffffff811115611e0257611e01611d1a565b5b611e0e86828701611d64565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611e4f81611d1f565b82525050565b6000611e618383611e46565b60208301905092915050565b6000602082019050919050565b6000611e8582611e1a565b611e8f8185611e25565b9350611e9a83611e36565b8060005b83811015611ecb578151611eb28882611e55565b9750611ebd83611e6d565b925050600181019050611e9e565b5085935050505092915050565b60006020820190508181036000830152611ef28184611e7a565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f2582611efa565b9050919050565b611f3581611f1a565b8114611f4057600080fd5b50565b600081359050611f5281611f2c565b92915050565b60008060008060008060a08789031215611f7557611f74611d15565b5b6000611f8389828a01611d40565b9650506020611f9489828a01611d40565b955050604087013567ffffffffffffffff811115611fb557611fb4611d1a565b5b611fc189828a01611d64565b94509450506060611fd489828a01611f43565b9250506080611fe589828a01611d40565b9150509295509295509295565b611ffb81611d1f565b82525050565b60006020820190506120166000830184611ff2565b92915050565b600080600080600080600060e0888a03121561203b5761203a611d15565b5b60006120498a828b01611f43565b975050602061205a8a828b01611f43565b965050604061206b8a828b01611d40565b955050606061207c8a828b01611d40565b945050608061208d8a828b01611d40565b93505060a061209e8a828b01611f43565b92505060c06120af8a828b01611d40565b91505092959891949750929550565b60006040820190506120d36000830185611ff2565b6120e06020830184611ff2565b9392505050565b6120f081611f1a565b82525050565b600060208201905061210b60008301846120e7565b92915050565b6000806040838503121561212857612127611d15565b5b600061213685828601611f43565b925050602061214785828601611f43565b9150509250929050565b600080600080600080600080610100898b03121561217257612171611d15565b5b60006121808b828c01611f43565b98505060206121918b828c01611f43565b97505060406121a28b828c01611d40565b96505060606121b38b828c01611d40565b95505060806121c48b828c01611d40565b94505060a06121d58b828c01611d40565b93505060c06121e68b828c01611f43565b92505060e06121f78b828c01611d40565b9150509295985092959890939650565b600060608201905061221c6000830186611ff2565b6122296020830185611ff2565b6122366040830184611ff2565b949350505050565b600082825260208201905092915050565b6000819050919050565b61226281611f1a565b82525050565b60006122748383612259565b60208301905092915050565b600061228f6020840184611f43565b905092915050565b6000602082019050919050565b60006122b0838561223e565b93506122bb8261224f565b8060005b858110156122f4576122d18284612280565b6122db8882612268565b97506122e683612297565b9250506001810190506122bf565b5085925050509392505050565b60006040820190506123166000830186611ff2565b81810360208301526123298184866122a4565b9050949350505050565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61237c82612333565b810181811067ffffffffffffffff8211171561239b5761239a612344565b5b80604052505050565b60006123ae611d0b565b90506123ba8282612373565b919050565b600067ffffffffffffffff8211156123da576123d9612344565b5b602082029050602081019050919050565b6000815190506123fa81611d29565b92915050565b600061241361240e846123bf565b6123a4565b9050808382526020820190506020840283018581111561243657612435611d5f565b5b835b8181101561245f578061244b88826123eb565b845260208401935050602081019050612438565b5050509392505050565b600082601f83011261247e5761247d611d55565b5b815161248e848260208601612400565b91505092915050565b6000602082840312156124ad576124ac611d15565b5b600082015167ffffffffffffffff8111156124cb576124ca611d1a565b5b6124d784828501612469565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561252557612524611d15565b5b600061253384828501611f43565b91505092915050565b600060408201905061255160008301856120e7565b61255e6020830184611ff2565b9392505050565b60008115159050919050565b61257a81612565565b811461258557600080fd5b50565b60008151905061259781612571565b92915050565b6000602082840312156125b3576125b2611d15565b5b60006125c184828501612588565b91505092915050565b600060a0820190506125df6000830189611ff2565b6125ec6020830188611ff2565b81810360408301526125ff8186886122a4565b905061260e60608301856120e7565b61261b6080830184611ff2565b979650505050505050565b60006020828403121561263c5761263b611d15565b5b600061264a848285016123eb565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061268d82611d1f565b915061269883611d1f565b9250828210156126ab576126aa612653565b5b828203905092915050565b60006040820190506126cb60008301856120e7565b6126d860208301846120e7565b9392505050565b6000815190506126ee81611f2c565b92915050565b60006020828403121561270a57612709611d15565b5b6000612718848285016126df565b91505092915050565b600060e082019050612736600083018a6120e7565b61274360208301896120e7565b6127506040830188611ff2565b61275d6060830187611ff2565b61276a6080830186611ff2565b61277760a08301856120e7565b61278460c0830184611ff2565b98975050505050505050565b600080604083850312156127a7576127a6611d15565b5b60006127b5858286016123eb565b92505060206127c6858286016123eb565b9150509250929050565b6000610100820190506127e6600083018b6120e7565b6127f3602083018a6120e7565b6128006040830189611ff2565b61280d6060830188611ff2565b61281a6080830187611ff2565b61282760a0830186611ff2565b61283460c08301856120e7565b61284160e0830184611ff2565b9998505050505050505050565b60008060006060848603121561286757612866611d15565b5b6000612875868287016123eb565b9350506020612886868287016123eb565b9250506040612897868287016123eb565b9150509250925092565b60006060820190506128b660008301866120e7565b6128c360208301856120e7565b6128d06040830184611ff2565b949350505050565b600082825260208201905092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612945602a836128d8565b9150612950826128e9565b604082019050919050565b6000602082019050818103600083015261297481612938565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006129d76026836128d8565b91506129e28261297b565b604082019050919050565b60006020820190508181036000830152612a06816129ca565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612a43601d836128d8565b9150612a4e82612a0d565b602082019050919050565b60006020820190508181036000830152612a7281612a36565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015612aad578082015181840152602081019050612a92565b83811115612abc576000848401525b50505050565b6000612acd82612a79565b612ad78185612a84565b9350612ae7818560208601612a8f565b80840191505092915050565b6000612aff8284612ac2565b915081905092915050565b600081519050919050565b6000612b2082612b0a565b612b2a81856128d8565b9350612b3a818560208601612a8f565b612b4381612333565b840191505092915050565b60006020820190508181036000830152612b688184612b15565b90509291505056fea2646970667358221220889a8d8fec3f4cb8d3bf0d9cdc81c15837d7db830670bb3ad3535b0cd96756f164736f6c63430008090033";

type AdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Adapter__factory extends ContractFactory {
  constructor(...args: AdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _factory: string,
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Adapter> {
    return super.deploy(_factory, _router, overrides || {}) as Promise<Adapter>;
  }
  getDeployTransaction(
    _factory: string,
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_factory, _router, overrides || {});
  }
  attach(address: string): Adapter {
    return super.attach(address) as Adapter;
  }
  connect(signer: Signer): Adapter__factory {
    return super.connect(signer) as Adapter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdapterInterface {
    return new utils.Interface(_abi) as AdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Adapter {
    return new Contract(address, _abi, signerOrProvider) as Adapter;
  }
}

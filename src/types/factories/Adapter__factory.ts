/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Adapter, AdapterInterface } from "../Adapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "LiquidityAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "LiquidityRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pairAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "PairCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "Swapped",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBmin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "allPairsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "createPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161164738038061164783398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b611589806100be6000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c80631f00ca741461009e57806338ed1739146100c7578063574f2ba3146100da5780638803dbee146100f0578063baa2abde14610103578063c45a01551461012b578063c9c6539614610156578063d06ca61f14610169578063e6a439051461017c578063e8e337001461018f578063f887ea40146101bd575b600080fd5b6100b16100ac366004610f9c565b6101d0565b6040516100be9190610fe7565b60405180910390f35b6100b16100d5366004611043565b610261565b6100e2610445565b6040519081526020016100be565b6100b16100fe366004611043565b6104d1565b6101166101113660046110b5565b61069c565b604080519283526020830191909152016100be565b60005461013e906001600160a01b031681565b6040516001600160a01b0390911681526020016100be565b61013e610164366004611127565b6108c4565b6100b1610177366004610f9c565b610994565b61013e61018a366004611127565b6109c9565b6101a261019d366004611160565b610a53565b604080519384526020840192909252908201526060016100be565b60015461013e906001600160a01b031681565b6001546040516307c0329d60e21b81526060916001600160a01b031690631f00ca749061020590879087908790600401611225565b60006040518083038186803b15801561021d57600080fd5b505afa158015610231573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610259919081019061125e565b949350505050565b60606102a23330898888600081811061027c5761027c61131b565b90506020020160208101906102919190611331565b6001600160a01b0316929190610cda565b848460008181106102b5576102b561131b565b90506020020160208101906102ca9190611331565b60015460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926102fd929116908b9060040161134e565b602060405180830381600087803b15801561031757600080fd5b505af115801561032b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034f9190611367565b506001546040516338ed173960e01b81526001600160a01b03909116906338ed17399061038a908a908a908a908a908a908a90600401611389565b600060405180830381600087803b1580156103a457600080fd5b505af11580156103b8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103e0919081019061125e565b9050806040516103f091906113c7565b6040518091039020836001600160a01b03167f8b9fe922dedae2757c4ea772fb26df6f03a05b14a7978bbfd74aec5737ff564e87876040516104339291906113fd565b60405180910390a39695505050505050565b60008060009054906101000a90046001600160a01b03166001600160a01b031663574f2ba36040518163ffffffff1660e01b815260040160206040518083038186803b15801561049457600080fd5b505afa1580156104a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cc9190611411565b905090565b60606104ec3330888888600081811061027c5761027c61131b565b848460008181106104ff576104ff61131b565b90506020020160208101906105149190611331565b60015460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392610547929116908a9060040161134e565b602060405180830381600087803b15801561056157600080fd5b505af1158015610575573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105999190611367565b50600154604051634401edf760e11b81526001600160a01b0390911690638803dbee906105d4908a908a908a908a908a908a90600401611389565b600060405180830381600087803b1580156105ee57600080fd5b505af1158015610602573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261062a919081019061125e565b905061068e33826000815181106106435761064361131b565b602002602001015188610656919061142a565b878760008181106106695761066961131b565b905060200201602081019061067e9190611331565b6001600160a01b03169190610d4b565b806040516103f091906113c7565b6000805460405163e6a4390560e01b8152829182916001600160a01b039091169063e6a43905906106d3908d908d9060040161144f565b60206040518083038186803b1580156106eb57600080fd5b505afa1580156106ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107239190611469565b905061073a6001600160a01b03821633308b610cda565b60015460405163095ea7b360e01b81526001600160a01b038381169263095ea7b39261076e92909116908c9060040161134e565b602060405180830381600087803b15801561078857600080fd5b505af115801561079c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c09190611367565b50600154604051635d5155ef60e11b81526001600160a01b038c811660048301528b81166024830152604482018b9052606482018a90526084820189905287811660a483015260c482018790529091169063baa2abde9060e4016040805180830381600087803b15801561083357600080fd5b505af1158015610847573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086b9190611486565b604080518381526020810183905292955090935089916001600160a01b038816917f1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d910160405180910390a35097509795505050505050565b600080546040516364e329cb60e11b81526001600160a01b039091169063c9c65396906108f7908690869060040161144f565b602060405180830381600087803b15801561091157600080fd5b505af1158015610925573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109499190611469565b9050806001600160a01b03167fa92a2b95c8d8436f6ac4c673c61487364f877efb9534d4296fad8ef904546c94848460405161098692919061144f565b60405180910390a292915050565b60015460405163d06ca61f60e01b81526060916001600160a01b03169063d06ca61f9061020590879087908790600401611225565b6000805460405163e6a4390560e01b81526001600160a01b039091169063e6a43905906109fc908690869060040161144f565b60206040518083038186803b158015610a1457600080fd5b505afa158015610a28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4c9190611469565b9392505050565b60008080610a6c6001600160a01b038c1633308c610cda565b610a816001600160a01b038b1633308b610cda565b60015460405163095ea7b360e01b81526001600160a01b038d81169263095ea7b392610ab592909116908d9060040161134e565b602060405180830381600087803b158015610acf57600080fd5b505af1158015610ae3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b079190611367565b5060015460405163095ea7b360e01b81526001600160a01b038c81169263095ea7b392610b3c92909116908c9060040161134e565b602060405180830381600087803b158015610b5657600080fd5b505af1158015610b6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8e9190611367565b5060015460405162e8e33760e81b81526001600160a01b038d811660048301528c81166024830152604482018c9052606482018b9052608482018a905260a4820189905287811660c483015260e482018790529091169063e8e337009061010401606060405180830381600087803b158015610c0957600080fd5b505af1158015610c1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4191906114aa565b91945092509050610c6733610c56858c61142a565b6001600160a01b038e169190610d4b565b610c8633610c75848b61142a565b6001600160a01b038d169190610d4b565b604080518481526020810184905282916001600160a01b038816917f64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e910160405180910390a3985098509895505050505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610d459085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610d6f565b50505050565b610d6a8363a9059cbb60e01b8484604051602401610d0e92919061134e565b505050565b6000610dc4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610e469092919063ffffffff16565b805190915015610d6a5780806020019051810190610de29190611367565b610d6a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b6060610259848460008585843b610e9f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610e3d565b600080866001600160a01b03168587604051610ebb9190611504565b60006040518083038185875af1925050503d8060008114610ef8576040519150601f19603f3d011682016040523d82523d6000602084013e610efd565b606091505b5091509150610f0d828286610f18565b979650505050505050565b60608315610f27575081610a4c565b825115610f375782518084602001fd5b8160405162461bcd60e51b8152600401610e3d9190611520565b60008083601f840112610f6357600080fd5b5081356001600160401b03811115610f7a57600080fd5b6020830191508360208260051b8501011115610f9557600080fd5b9250929050565b600080600060408486031215610fb157600080fd5b8335925060208401356001600160401b03811115610fce57600080fd5b610fda86828701610f51565b9497909650939450505050565b6020808252825182820181905260009190848201906040850190845b8181101561101f57835183529284019291840191600101611003565b50909695505050505050565b6001600160a01b038116811461104057600080fd5b50565b60008060008060008060a0878903121561105c57600080fd5b863595506020870135945060408701356001600160401b0381111561108057600080fd5b61108c89828a01610f51565b90955093505060608701356110a08161102b565b80925050608087013590509295509295509295565b600080600080600080600060e0888a0312156110d057600080fd5b87356110db8161102b565b965060208801356110eb8161102b565b955060408801359450606088013593506080880135925060a08801356111108161102b565b8092505060c0880135905092959891949750929550565b6000806040838503121561113a57600080fd5b82356111458161102b565b915060208301356111558161102b565b809150509250929050565b600080600080600080600080610100898b03121561117d57600080fd5b88356111888161102b565b975060208901356111988161102b565b965060408901359550606089013594506080890135935060a0890135925060c08901356111c48161102b565b8092505060e089013590509295985092959890939650565b8183526000602080850194508260005b8581101561121a5781356111ff8161102b565b6001600160a01b0316875295820195908201906001016111ec565b509495945050505050565b83815260406020820152600061123f6040830184866111dc565b95945050505050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561127157600080fd5b82516001600160401b038082111561128857600080fd5b818501915085601f83011261129c57600080fd5b8151818111156112ae576112ae611248565b8060051b604051601f19603f830116810181811085821117156112d3576112d3611248565b6040529182528482019250838101850191888311156112f157600080fd5b938501935b8285101561130f578451845293850193928501926112f6565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561134357600080fd5b8135610a4c8161102b565b6001600160a01b03929092168252602082015260400190565b60006020828403121561137957600080fd5b81518015158114610a4c57600080fd5b86815285602082015260a0604082015260006113a960a0830186886111dc565b6001600160a01b039490941660608301525060800152949350505050565b815160009082906020808601845b838110156113f1578151855293820193908201906001016113d5565b50929695505050505050565b6020815260006102596020830184866111dc565b60006020828403121561142357600080fd5b5051919050565b60008282101561144a57634e487b7160e01b600052601160045260246000fd5b500390565b6001600160a01b0392831681529116602082015260400190565b60006020828403121561147b57600080fd5b8151610a4c8161102b565b6000806040838503121561149957600080fd5b505080516020909101519092909150565b6000806000606084860312156114bf57600080fd5b8351925060208401519150604084015190509250925092565b60005b838110156114f35781810151838201526020016114db565b83811115610d455750506000910152565b600082516115168184602087016114d8565b9190910192915050565b602081526000825180602084015261153f8160408501602087016114d8565b601f01601f1916919091016040019291505056fea26469706673582212208b1015ec7d7f5db09cc3ae27d674ea1383b4d7ab9157e6b2383f18b4681571e264736f6c63430008090033";

type AdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Adapter__factory extends ContractFactory {
  constructor(...args: AdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _factory: string,
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Adapter> {
    return super.deploy(_factory, _router, overrides || {}) as Promise<Adapter>;
  }
  getDeployTransaction(
    _factory: string,
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_factory, _router, overrides || {});
  }
  attach(address: string): Adapter {
    return super.attach(address) as Adapter;
  }
  connect(signer: Signer): Adapter__factory {
    return super.connect(signer) as Adapter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdapterInterface {
    return new utils.Interface(_abi) as AdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Adapter {
    return new Contract(address, _abi, signerOrProvider) as Adapter;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Adapter, AdapterInterface } from "../Adapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "LiquidityAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "LiquidityRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pairAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "PairCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "Swapped",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBmin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "allPairsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "createPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200326f3803806200326f833981810160405281019062000037919062000231565b6200006b7fcb24ee835adde08e16e77306e8c2e627e211f5a547b56356e7e042ea250bbf3360001b620001c460201b60201c565b6200009f7fb17a6a5d04d53a3c17ce93a602b7e963a409c940e3cee6793d28efbee2cf106b60001b620001c460201b60201c565b620000d37fd8a3d81f59c296f2e7b7a820f2d0816aaba9e6366ad0c09116dfdaa7c1bc474060001b620001c460201b60201c565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001477fd41624e4675a1470c5ef49f54ec50b1665901d5f710bd4d589866718646b57e960001b620001c460201b60201c565b6200017b7fab830d4885d5465afc99ea716898c19c70b735c7679cf65ba1ff2d02511efec660001b620001c460201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000278565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001f982620001cc565b9050919050565b6200020b81620001ec565b81146200021757600080fd5b50565b6000815190506200022b8162000200565b92915050565b600080604083850312156200024b576200024a620001c7565b5b60006200025b858286016200021a565b92505060206200026e858286016200021a565b9150509250929050565b612fe780620002886000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c80631f00ca741461009e57806338ed1739146100ce578063574f2ba3146100fe5780638803dbee1461011c578063baa2abde1461014c578063c45a01551461017d578063c9c653961461019b578063d06ca61f146101cb578063e6a43905146101fb578063e8e337001461022b578063f887ea401461025d575b600080fd5b6100b860048036038101906100b39190612130565b61027b565b6040516100c5919061224e565b60405180910390f35b6100e860048036038101906100e391906122ce565b6103be565b6040516100f5919061224e565b60405180910390f35b6101066107a7565b6040516101139190612377565b60405180910390f35b610136600480360381019061013191906122ce565b6108d0565b604051610143919061224e565b60405180910390f35b61016660048036038101906101619190612392565b610d8a565b604051610174929190612434565b60405180910390f35b61018561121c565b604051610192919061246c565b60405180910390f35b6101b560048036038101906101b09190612487565b611240565b6040516101c2919061246c565b60405180910390f35b6101e560048036038101906101e09190612130565b611423565b6040516101f2919061224e565b60405180910390f35b61021560048036038101906102109190612487565b611566565b604051610222919061246c565b60405180910390f35b610245600480360381019061024091906124c7565b61169f565b6040516102549392919061257d565b60405180910390f35b610265611cdc565b604051610272919061246c565b60405180910390f35b60606102a97f7d055836693071168452007dea6e26b99769ae95f90fbd7ca34049c550f5b64c60001b611d02565b6102d57f9c36f74a0b60b6e252a70a84c985b778bef624dd812d37a6b51ebfe462637b6860001b611d02565b6103017fd011c04d01300248a0399e8562e562dfade7f518346d4a90a523214686663a0860001b611d02565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631f00ca748585856040518463ffffffff1660e01b815260040161036093929190612677565b60006040518083038186803b15801561037857600080fd5b505afa15801561038c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103b5919061280d565b90509392505050565b60606103ec7f9de4fbeb17c2cfd460779f472a13f54f59c7114a2bfa85a18e31a9726e6933ec60001b611d02565b6104187f935b9dede285afbd0432737498038ce627a653f304a23f10f4eb3815d29735ce60001b611d02565b6104447f19298b9773ec70128608529a597b238a20c2c47b55e77866cc18aaf278566d2a60001b611d02565b6104993330898888600081811061045e5761045d612856565b5b90506020020160208101906104739190612885565b73ffffffffffffffffffffffffffffffffffffffff16611d05909392919063ffffffff16565b6104c57fe8c3ee387cab68e2cab4e3a553b86e77fcad14d89f533fbde4cd45196037107c60001b611d02565b6104f17f5b0915da4eea13fb96c27425bd438795f8887ee2f4cf4ddcf65efbbc907c670260001b611d02565b8484600081811061050557610504612856565b5b905060200201602081019061051a9190612885565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16896040518363ffffffff1660e01b81526004016105769291906128b2565b602060405180830381600087803b15801561059057600080fd5b505af11580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c89190612913565b506105f57f7635d274f43233970c2e439661d90b5eb604d238f9730e90896c3ef428278acf60001b611d02565b6106217fb75ccc5d8ff7a72be7a5f74357d4d916e0794c2d563055bd64c138912c4c874c60001b611d02565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338ed17398888888888886040518763ffffffff1660e01b815260040161068696959493929190612940565b600060405180830381600087803b1580156106a057600080fd5b505af11580156106b4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106dd919061280d565b905061070b7f492783d73ddae550399dc562d6e25863b195abb0d41495f7958e7b1e29d454f160001b611d02565b6107377fbe64ec5d003a2a236538ea7ffc49939b76e5dbcc6f3bf01813c40f0d98caa7a760001b611d02565b806040516107459190612a2c565b60405180910390208373ffffffffffffffffffffffffffffffffffffffff167f8b9fe922dedae2757c4ea772fb26df6f03a05b14a7978bbfd74aec5737ff564e8787604051610795929190612a43565b60405180910390a39695505050505050565b60006107d57fa6e36c89f0df3114c486e1783cd3e24a4442ca1de33142fb1b63122736ea314860001b611d02565b6108017f04e34508c480f91f34e5b643d9a11cb2956f827b8568afcf0d62db093093534f60001b611d02565b61082d7f5398dcecb78711b03a1abf5e40608b3d33ad7106ba66a110169141bd0fb6132c60001b611d02565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663574f2ba36040518163ffffffff1660e01b815260040160206040518083038186803b15801561089357600080fd5b505afa1580156108a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cb9190612a67565b905090565b60606108fe7fb39d4f63540b1212b4730ed685b763b5742afd702f2ed415e24b8f85c98414fa60001b611d02565b61092a7f23230567beb0a68eec04788a0ea53009c7ccebe6db7cb086ee1be845b914b70e60001b611d02565b6109567fe9d03424048212de8c246552d987317deea6402a0d9e28d9b21567ceb961310660001b611d02565b6109ab333088888860008181106109705761096f612856565b5b90506020020160208101906109859190612885565b73ffffffffffffffffffffffffffffffffffffffff16611d05909392919063ffffffff16565b6109d77f4a094c59ad27b739dbe7836c39c220a12db95f56dea6d89f626c708035ece44560001b611d02565b610a037f23d2a093d584a5a9e84443d7894a03d80a7a3b2b2d353bdad71506f6cd20be4560001b611d02565b84846000818110610a1757610a16612856565b5b9050602002016020810190610a2c9190612885565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16886040518363ffffffff1660e01b8152600401610a889291906128b2565b602060405180830381600087803b158015610aa257600080fd5b505af1158015610ab6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ada9190612913565b50610b077f3963a90beb27481f5721aa092783a2ca533c8ec5bd040bb84f043ea54e323f3560001b611d02565b610b337f0e95dff3e7c44ab748b2ebc15d34c0a8624454e04fab1668747cca58bda21ff760001b611d02565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638803dbee8888888888886040518763ffffffff1660e01b8152600401610b9896959493929190612940565b600060405180830381600087803b158015610bb257600080fd5b505af1158015610bc6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610bef919061280d565b9050610c1d7fd9f1b67c1e4d08d6a7d22fb9401f632d4b5dbdd7331f918dfe026df2fdb1746e60001b611d02565b610c497fc6b1fae63eaad0edcb0a9fb22a896fa7cdfbb867ee7a4e749b007a543dc4ac1f60001b611d02565b610cc23382600081518110610c6157610c60612856565b5b602002602001015188610c749190612ac3565b87876000818110610c8857610c87612856565b5b9050602002016020810190610c9d9190612885565b73ffffffffffffffffffffffffffffffffffffffff16611d8e9092919063ffffffff16565b610cee7fe9a5a82bc09a3a625001567824097de0dc413613bf07ad7e3f0c1c69e16ebd9360001b611d02565b610d1a7f3db7a303cf95ee7acf0bb80faa90bb0180afdfdbc0e15e7ae074ae4cc070f20660001b611d02565b80604051610d289190612a2c565b60405180910390208373ffffffffffffffffffffffffffffffffffffffff167f8b9fe922dedae2757c4ea772fb26df6f03a05b14a7978bbfd74aec5737ff564e8787604051610d78929190612a43565b60405180910390a39695505050505050565b600080610db97fe0f600ed2b7ae1c534bfc8ea868c4d00f57162fead3790cd6e141dce21f1fb8c60001b611d02565b610de57fbc495162ef4e73b94962be5fe48a722c751e646c15103f8a9da383439b474b7160001b611d02565b610e117fd939534a50ecd5709f02e62ab25e83219f7e2e7f3a50c82cbfe6a6f8bb1f243e60001b611d02565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e6a439058b8b6040518363ffffffff1660e01b8152600401610e6f929190612af7565b60206040518083038186803b158015610e8757600080fd5b505afa158015610e9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebf9190612b35565b9050610eed7fc72d1aa75cfacc7ecf0234e8fdf292d0c93a3b2e45a002848af7281f4bf52b8560001b611d02565b610f197fcd29a4727d5eb6976b96e71ded0746beca205839641e099b18a421c659a13f7d60001b611d02565b610f4633308a8473ffffffffffffffffffffffffffffffffffffffff16611d05909392919063ffffffff16565b610f727f5c68936a14b5c18267b3dbecf6281310de7ab1b44e66df45dae82e7936d799a560001b611d02565b610f9e7fa02d6f4b666a549390be58b236c7f9c71349aa4927d32dd352891a364a356c6b60001b611d02565b8073ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168a6040518363ffffffff1660e01b8152600401610ffb9291906128b2565b602060405180830381600087803b15801561101557600080fd5b505af1158015611029573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104d9190612913565b5061107a7f42b1d1f2d4daae5d6a7aaa9f465e0b6bef33086cfb556dd3d93b9087edb8b6fd60001b611d02565b6110a67f3926acc0b3bc0055f126661853df1483312a3e813597088e092e043150a11ff960001b611d02565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663baa2abde8b8b8b8b8b8b8b6040518863ffffffff1660e01b815260040161110d9796959493929190612b62565b6040805180830381600087803b15801561112657600080fd5b505af115801561113a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115e9190612bd1565b80935081945050506111927f3619f2d2b7e675c52aa75a1bad5089987d9e1ad6dca123ca4e63b613b22afc0360001b611d02565b6111be7ff4dde84775e08d180e359c3ff63341f4be18cea92d4a3fc317d9a1704e757deb60001b611d02565b878573ffffffffffffffffffffffffffffffffffffffff167f1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d8585604051611207929190612434565b60405180910390a35097509795505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061126e7ff316acf54dc3c9a0041ceed0a05f81603454830b183259859a57f4a8d453105f60001b611d02565b61129a7f1e93a34ff03f275991cabeb51b8712f3fc506c4d8ed004fea9bad7c33b9d30bd60001b611d02565b6112c67f69f09d714ea64b481c8f0f6a22e6484b6c16fd929c2049e5aac361a4a35bacd560001b611d02565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c9c6539684846040518363ffffffff1660e01b8152600401611321929190612af7565b602060405180830381600087803b15801561133b57600080fd5b505af115801561134f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113739190612b35565b90506113a17f1425472ee073cbf9a4f05af5a8f1c2837abd9529911cdae9fd807fe28c1e9e4960001b611d02565b6113cd7f19c300d029a8397f5621c3c326161d23aa803a744448ec8a4255b0db2441ff1860001b611d02565b8073ffffffffffffffffffffffffffffffffffffffff167fa92a2b95c8d8436f6ac4c673c61487364f877efb9534d4296fad8ef904546c948484604051611415929190612af7565b60405180910390a292915050565b60606114517f2e58bc5e029a94791a8e211fdf9ad1a83b80cac1c553529c11ceca841a53e36160001b611d02565b61147d7fa6c9e066287e196b9b4d0c2eca74ccc16bcd054e2d9ae70c10b4d08f11cbd8f160001b611d02565b6114a97f03b2ad5e6482eda2ee4d487de08949cdfdfcba659bf2ed0142adbafbe1f4add360001b611d02565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8585856040518463ffffffff1660e01b815260040161150893929190612677565b60006040518083038186803b15801561152057600080fd5b505afa158015611534573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061155d919061280d565b90509392505050565b60006115947f4784b5996e3ce0c9bc05a64b1110a2baea2b0d8e3ccd91e2c53acab7b425126360001b611d02565b6115c07f68ed2d56550e42f7c888e8e6ce5909a79f4ae19bc19371dfb86ab757efd41bab60001b611d02565b6115ec7fca8a8fcab604bc82d75b66dc0b1b5a3cd0cd7726b7965260d71b610f5ab0ff6260001b611d02565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e6a4390584846040518363ffffffff1660e01b8152600401611647929190612af7565b60206040518083038186803b15801561165f57600080fd5b505afa158015611673573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116979190612b35565b905092915050565b60008060006116d07fcdad438695c8c60396247f4c2608ca079fe1fb947ac37ad3b42b4c941e941fd060001b611d02565b6116fc7fbbc0b98cf8119da0a7727fb4d23e44cbe19984527e111b759114b625430b3a4160001b611d02565b6117287fb4141a1b9c986ca9fdb3647c0d5bfb22f12d19bb4d44ffea4c66823c8514e8de60001b611d02565b61175533308b8e73ffffffffffffffffffffffffffffffffffffffff16611d05909392919063ffffffff16565b6117817f122d288a9aeff636b69d7aee50d4d09506f26fd8b49d00f8162b8d367c4f926660001b611d02565b6117ad7f6db154b78db6bea85f7fdbb5841e3abea45a1790a1ff4e6e91e17eb2f65e14af60001b611d02565b6117da33308a8d73ffffffffffffffffffffffffffffffffffffffff16611d05909392919063ffffffff16565b6118067f80584ec823c535ff22de1f3009e7f27da07e45388177e1e0910de85dae69635860001b611d02565b6118327fb7ddf6d4ee7638ab89f1b7611ff901dcff43bbcbc7a0fe00ab8b83196797a48560001b611d02565b8a73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168b6040518363ffffffff1660e01b815260040161188f9291906128b2565b602060405180830381600087803b1580156118a957600080fd5b505af11580156118bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e19190612913565b5061190e7fc87a3d2a532e0e3452949e0c4c7e3f29d22cf39dca898e583fabd523ff10774460001b611d02565b61193a7fd0a605aad81d56be8569513ca6b65f5e4ba6cd3b6dbaeee54d340c8d9241e3f460001b611d02565b8973ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168a6040518363ffffffff1660e01b81526004016119979291906128b2565b602060405180830381600087803b1580156119b157600080fd5b505af11580156119c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e99190612913565b50611a167fc9de09ad0ed2c4bdc94c522c93fdacc0630f657d743877aa57e5548deb8383bc60001b611d02565b611a427f5b4a50b6ec07b761dcdc0d26890b1e9add193040df1674fa3cf6be98cdae726960001b611d02565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e8e337008c8c8c8c8c8c8c8c6040518963ffffffff1660e01b8152600401611aab989796959493929190612c11565b606060405180830381600087803b158015611ac557600080fd5b505af1158015611ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611afd9190612c8f565b809350819450829550505050611b357f3864f52bc26f0935bba91b3dab7ae74244ddbc927782464a140067035d6ab6f560001b611d02565b611b617fb772c9640b3a90122a504f6b7f8a180a125ad46ebaf3d38eac217bf844ea025d60001b611d02565b611b9733848b611b719190612ac3565b8d73ffffffffffffffffffffffffffffffffffffffff16611d8e9092919063ffffffff16565b611bc37f2b965cd23fa9047bbd06044a8fd29137bee195b3ea97d2feb09096141446be9460001b611d02565b611bef7f70406b162685d2bad23b3897722d85f184a1157682cd279b0c41f90523f24a6d60001b611d02565b611c2533838a611bff9190612ac3565b8c73ffffffffffffffffffffffffffffffffffffffff16611d8e9092919063ffffffff16565b611c517fb8abea613b54aa25c85c74ed74eeb8bd0714dd7105329c8ad04c2913a07c00b460001b611d02565b611c7d7fb90df3b8da283bb0f8d1fd88aabf0a97e51443b7080f5b9c1c75f9fcb7e088a360001b611d02565b808573ffffffffffffffffffffffffffffffffffffffff167f64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e8585604051611cc6929190612434565b60405180910390a3985098509895505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b611d88846323b872dd60e01b858585604051602401611d2693929190612ce2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611e14565b50505050565b611e0f8363a9059cbb60e01b8484604051602401611dad9291906128b2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611e14565b505050565b6000611e76826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611edb9092919063ffffffff16565b9050600081511115611ed65780806020019051810190611e969190612913565b611ed5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ecc90612d9c565b60405180910390fd5b5b505050565b6060611eea8484600085611ef3565b90509392505050565b606082471015611f38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f2f90612e2e565b60405180910390fd5b611f4185612007565b611f80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f7790612e9a565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611fa99190612f34565b60006040518083038185875af1925050503d8060008114611fe6576040519150601f19603f3d011682016040523d82523d6000602084013e611feb565b606091505b5091509150611ffb82828661201a565b92505050949350505050565b600080823b905060008111915050919050565b6060831561202a5782905061207a565b60008351111561203d5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120719190612f8f565b60405180910390fd5b9392505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6120a881612095565b81146120b357600080fd5b50565b6000813590506120c58161209f565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126120f0576120ef6120cb565b5b8235905067ffffffffffffffff81111561210d5761210c6120d0565b5b602083019150836020820283011115612129576121286120d5565b5b9250929050565b6000806000604084860312156121495761214861208b565b5b6000612157868287016120b6565b935050602084013567ffffffffffffffff81111561217857612177612090565b5b612184868287016120da565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6121c581612095565b82525050565b60006121d783836121bc565b60208301905092915050565b6000602082019050919050565b60006121fb82612190565b612205818561219b565b9350612210836121ac565b8060005b8381101561224157815161222888826121cb565b9750612233836121e3565b925050600181019050612214565b5085935050505092915050565b6000602082019050818103600083015261226881846121f0565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061229b82612270565b9050919050565b6122ab81612290565b81146122b657600080fd5b50565b6000813590506122c8816122a2565b92915050565b60008060008060008060a087890312156122eb576122ea61208b565b5b60006122f989828a016120b6565b965050602061230a89828a016120b6565b955050604087013567ffffffffffffffff81111561232b5761232a612090565b5b61233789828a016120da565b9450945050606061234a89828a016122b9565b925050608061235b89828a016120b6565b9150509295509295509295565b61237181612095565b82525050565b600060208201905061238c6000830184612368565b92915050565b600080600080600080600060e0888a0312156123b1576123b061208b565b5b60006123bf8a828b016122b9565b97505060206123d08a828b016122b9565b96505060406123e18a828b016120b6565b95505060606123f28a828b016120b6565b94505060806124038a828b016120b6565b93505060a06124148a828b016122b9565b92505060c06124258a828b016120b6565b91505092959891949750929550565b60006040820190506124496000830185612368565b6124566020830184612368565b9392505050565b61246681612290565b82525050565b6000602082019050612481600083018461245d565b92915050565b6000806040838503121561249e5761249d61208b565b5b60006124ac858286016122b9565b92505060206124bd858286016122b9565b9150509250929050565b600080600080600080600080610100898b0312156124e8576124e761208b565b5b60006124f68b828c016122b9565b98505060206125078b828c016122b9565b97505060406125188b828c016120b6565b96505060606125298b828c016120b6565b955050608061253a8b828c016120b6565b94505060a061254b8b828c016120b6565b93505060c061255c8b828c016122b9565b92505060e061256d8b828c016120b6565b9150509295985092959890939650565b60006060820190506125926000830186612368565b61259f6020830185612368565b6125ac6040830184612368565b949350505050565b600082825260208201905092915050565b6000819050919050565b6125d881612290565b82525050565b60006125ea83836125cf565b60208301905092915050565b600061260560208401846122b9565b905092915050565b6000602082019050919050565b600061262683856125b4565b9350612631826125c5565b8060005b8581101561266a5761264782846125f6565b61265188826125de565b975061265c8361260d565b925050600181019050612635565b5085925050509392505050565b600060408201905061268c6000830186612368565b818103602083015261269f81848661261a565b9050949350505050565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6126f2826126a9565b810181811067ffffffffffffffff82111715612711576127106126ba565b5b80604052505050565b6000612724612081565b905061273082826126e9565b919050565b600067ffffffffffffffff8211156127505761274f6126ba565b5b602082029050602081019050919050565b6000815190506127708161209f565b92915050565b600061278961278484612735565b61271a565b905080838252602082019050602084028301858111156127ac576127ab6120d5565b5b835b818110156127d557806127c18882612761565b8452602084019350506020810190506127ae565b5050509392505050565b600082601f8301126127f4576127f36120cb565b5b8151612804848260208601612776565b91505092915050565b6000602082840312156128235761282261208b565b5b600082015167ffffffffffffffff81111561284157612840612090565b5b61284d848285016127df565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561289b5761289a61208b565b5b60006128a9848285016122b9565b91505092915050565b60006040820190506128c7600083018561245d565b6128d46020830184612368565b9392505050565b60008115159050919050565b6128f0816128db565b81146128fb57600080fd5b50565b60008151905061290d816128e7565b92915050565b6000602082840312156129295761292861208b565b5b6000612937848285016128fe565b91505092915050565b600060a0820190506129556000830189612368565b6129626020830188612368565b818103604083015261297581868861261a565b9050612984606083018561245d565b6129916080830184612368565b979650505050505050565b600081905092915050565b6129b081612095565b82525050565b60006129c283836129a7565b60208301905092915050565b60006129d982612190565b6129e3818561299c565b93506129ee836121ac565b8060005b83811015612a1f578151612a0688826129b6565b9750612a11836121e3565b9250506001810190506129f2565b5085935050505092915050565b6000612a3882846129ce565b915081905092915050565b60006020820190508181036000830152612a5e81848661261a565b90509392505050565b600060208284031215612a7d57612a7c61208b565b5b6000612a8b84828501612761565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612ace82612095565b9150612ad983612095565b925082821015612aec57612aeb612a94565b5b828203905092915050565b6000604082019050612b0c600083018561245d565b612b19602083018461245d565b9392505050565b600081519050612b2f816122a2565b92915050565b600060208284031215612b4b57612b4a61208b565b5b6000612b5984828501612b20565b91505092915050565b600060e082019050612b77600083018a61245d565b612b84602083018961245d565b612b916040830188612368565b612b9e6060830187612368565b612bab6080830186612368565b612bb860a083018561245d565b612bc560c0830184612368565b98975050505050505050565b60008060408385031215612be857612be761208b565b5b6000612bf685828601612761565b9250506020612c0785828601612761565b9150509250929050565b600061010082019050612c27600083018b61245d565b612c34602083018a61245d565b612c416040830189612368565b612c4e6060830188612368565b612c5b6080830187612368565b612c6860a0830186612368565b612c7560c083018561245d565b612c8260e0830184612368565b9998505050505050505050565b600080600060608486031215612ca857612ca761208b565b5b6000612cb686828701612761565b9350506020612cc786828701612761565b9250506040612cd886828701612761565b9150509250925092565b6000606082019050612cf7600083018661245d565b612d04602083018561245d565b612d116040830184612368565b949350505050565b600082825260208201905092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612d86602a83612d19565b9150612d9182612d2a565b604082019050919050565b60006020820190508181036000830152612db581612d79565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000612e18602683612d19565b9150612e2382612dbc565b604082019050919050565b60006020820190508181036000830152612e4781612e0b565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612e84601d83612d19565b9150612e8f82612e4e565b602082019050919050565b60006020820190508181036000830152612eb381612e77565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015612eee578082015181840152602081019050612ed3565b83811115612efd576000848401525b50505050565b6000612f0e82612eba565b612f188185612ec5565b9350612f28818560208601612ed0565b80840191505092915050565b6000612f408284612f03565b915081905092915050565b600081519050919050565b6000612f6182612f4b565b612f6b8185612d19565b9350612f7b818560208601612ed0565b612f84816126a9565b840191505092915050565b60006020820190508181036000830152612fa98184612f56565b90509291505056fea26469706673582212206e62c6f09a5c813eec244c4863a1e64a74bf8795caf1df2c485be15191ae3a2c64736f6c63430008090033";

type AdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Adapter__factory extends ContractFactory {
  constructor(...args: AdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _factory: string,
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Adapter> {
    return super.deploy(_factory, _router, overrides || {}) as Promise<Adapter>;
  }
  getDeployTransaction(
    _factory: string,
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_factory, _router, overrides || {});
  }
  attach(address: string): Adapter {
    return super.attach(address) as Adapter;
  }
  connect(signer: Signer): Adapter__factory {
    return super.connect(signer) as Adapter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdapterInterface {
    return new utils.Interface(_abi) as AdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Adapter {
    return new Contract(address, _abi, signerOrProvider) as Adapter;
  }
}

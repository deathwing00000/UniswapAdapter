/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Adapter, AdapterInterface } from "../Adapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "LiquidityAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "LiquidityRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pairAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokennB",
        type: "address",
      },
    ],
    name: "PairCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "Swapped",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBmin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "allPairsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "createPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200323138038062003231833981810160405281019062000037919062000231565b6200006b7fcb24ee835adde08e16e77306e8c2e627e211f5a547b56356e7e042ea250bbf3360001b620001c460201b60201c565b6200009f7fb17a6a5d04d53a3c17ce93a602b7e963a409c940e3cee6793d28efbee2cf106b60001b620001c460201b60201c565b620000d37fd8a3d81f59c296f2e7b7a820f2d0816aaba9e6366ad0c09116dfdaa7c1bc474060001b620001c460201b60201c565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001477fd41624e4675a1470c5ef49f54ec50b1665901d5f710bd4d589866718646b57e960001b620001c460201b60201c565b6200017b7fab830d4885d5465afc99ea716898c19c70b735c7679cf65ba1ff2d02511efec660001b620001c460201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000278565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001f982620001cc565b9050919050565b6200020b81620001ec565b81146200021757600080fd5b50565b6000815190506200022b8162000200565b92915050565b600080604083850312156200024b576200024a620001c7565b5b60006200025b858286016200021a565b92505060206200026e858286016200021a565b9150509250929050565b612fa980620002886000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c80631f00ca741461009e57806338ed1739146100ce578063574f2ba3146100fe5780638803dbee1461011c578063baa2abde1461014c578063c45a01551461017d578063c9c653961461019b578063d06ca61f146101cb578063e6a43905146101fb578063e8e337001461022b578063f887ea401461025d575b600080fd5b6100b860048036038101906100b39190612116565b61027b565b6040516100c59190612234565b60405180910390f35b6100e860048036038101906100e391906122b4565b6103be565b6040516100f59190612234565b60405180910390f35b61010661079a565b604051610113919061235d565b60405180910390f35b610136600480360381019061013191906122b4565b6108c3565b6040516101439190612234565b60405180910390f35b61016660048036038101906101619190612378565b610d70565b60405161017492919061241a565b60405180910390f35b610185611202565b6040516101929190612452565b60405180910390f35b6101b560048036038101906101b0919061246d565b611226565b6040516101c29190612452565b60405180910390f35b6101e560048036038101906101e09190612116565b611409565b6040516101f29190612234565b60405180910390f35b6102156004803603810190610210919061246d565b61154c565b6040516102229190612452565b60405180910390f35b610245600480360381019061024091906124ad565b611685565b60405161025493929190612563565b60405180910390f35b610265611cc2565b6040516102729190612452565b60405180910390f35b60606102a97f7d055836693071168452007dea6e26b99769ae95f90fbd7ca34049c550f5b64c60001b611ce8565b6102d57f9c36f74a0b60b6e252a70a84c985b778bef624dd812d37a6b51ebfe462637b6860001b611ce8565b6103017fd011c04d01300248a0399e8562e562dfade7f518346d4a90a523214686663a0860001b611ce8565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631f00ca748585856040518463ffffffff1660e01b81526004016103609392919061265d565b60006040518083038186803b15801561037857600080fd5b505afa15801561038c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103b591906127f3565b90509392505050565b60606103ec7f9de4fbeb17c2cfd460779f472a13f54f59c7114a2bfa85a18e31a9726e6933ec60001b611ce8565b6104187f935b9dede285afbd0432737498038ce627a653f304a23f10f4eb3815d29735ce60001b611ce8565b6104447f19298b9773ec70128608529a597b238a20c2c47b55e77866cc18aaf278566d2a60001b611ce8565b6104993330898888600081811061045e5761045d61283c565b5b9050602002016020810190610473919061286b565b73ffffffffffffffffffffffffffffffffffffffff16611ceb909392919063ffffffff16565b6104c57fe8c3ee387cab68e2cab4e3a553b86e77fcad14d89f533fbde4cd45196037107c60001b611ce8565b6104f17f5b0915da4eea13fb96c27425bd438795f8887ee2f4cf4ddcf65efbbc907c670260001b611ce8565b848460008181106105055761050461283c565b5b905060200201602081019061051a919061286b565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16896040518363ffffffff1660e01b8152600401610576929190612898565b602060405180830381600087803b15801561059057600080fd5b505af11580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c891906128f9565b506105f57f7635d274f43233970c2e439661d90b5eb604d238f9730e90896c3ef428278acf60001b611ce8565b6106217fb75ccc5d8ff7a72be7a5f74357d4d916e0794c2d563055bd64c138912c4c874c60001b611ce8565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338ed17398888888888886040518763ffffffff1660e01b815260040161068696959493929190612926565b600060405180830381600087803b1580156106a057600080fd5b505af11580156106b4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106dd91906127f3565b905061070b7f492783d73ddae550399dc562d6e25863b195abb0d41495f7958e7b1e29d454f160001b611ce8565b6107377fbe64ec5d003a2a236538ea7ffc49939b76e5dbcc6f3bf01813c40f0d98caa7a760001b611ce8565b806040516107459190612a12565b60405180910390208373ffffffffffffffffffffffffffffffffffffffff167f85ae6d831512376400488016311b492ca5b46fa41ec4b6cce79054478ced242460405160405180910390a39695505050505050565b60006107c87fa6e36c89f0df3114c486e1783cd3e24a4442ca1de33142fb1b63122736ea314860001b611ce8565b6107f47f04e34508c480f91f34e5b643d9a11cb2956f827b8568afcf0d62db093093534f60001b611ce8565b6108207f5398dcecb78711b03a1abf5e40608b3d33ad7106ba66a110169141bd0fb6132c60001b611ce8565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663574f2ba36040518163ffffffff1660e01b815260040160206040518083038186803b15801561088657600080fd5b505afa15801561089a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108be9190612a29565b905090565b60606108f17fb39d4f63540b1212b4730ed685b763b5742afd702f2ed415e24b8f85c98414fa60001b611ce8565b61091d7f23230567beb0a68eec04788a0ea53009c7ccebe6db7cb086ee1be845b914b70e60001b611ce8565b6109497fe9d03424048212de8c246552d987317deea6402a0d9e28d9b21567ceb961310660001b611ce8565b61099e333088888860008181106109635761096261283c565b5b9050602002016020810190610978919061286b565b73ffffffffffffffffffffffffffffffffffffffff16611ceb909392919063ffffffff16565b6109ca7f4a094c59ad27b739dbe7836c39c220a12db95f56dea6d89f626c708035ece44560001b611ce8565b6109f67f23d2a093d584a5a9e84443d7894a03d80a7a3b2b2d353bdad71506f6cd20be4560001b611ce8565b84846000818110610a0a57610a0961283c565b5b9050602002016020810190610a1f919061286b565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16886040518363ffffffff1660e01b8152600401610a7b929190612898565b602060405180830381600087803b158015610a9557600080fd5b505af1158015610aa9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acd91906128f9565b50610afa7f3963a90beb27481f5721aa092783a2ca533c8ec5bd040bb84f043ea54e323f3560001b611ce8565b610b267f0e95dff3e7c44ab748b2ebc15d34c0a8624454e04fab1668747cca58bda21ff760001b611ce8565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638803dbee8888888888886040518763ffffffff1660e01b8152600401610b8b96959493929190612926565b600060405180830381600087803b158015610ba557600080fd5b505af1158015610bb9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610be291906127f3565b9050610c107fd9f1b67c1e4d08d6a7d22fb9401f632d4b5dbdd7331f918dfe026df2fdb1746e60001b611ce8565b610c3c7fc6b1fae63eaad0edcb0a9fb22a896fa7cdfbb867ee7a4e749b007a543dc4ac1f60001b611ce8565b610cb53382600081518110610c5457610c5361283c565b5b602002602001015188610c679190612a85565b87876000818110610c7b57610c7a61283c565b5b9050602002016020810190610c90919061286b565b73ffffffffffffffffffffffffffffffffffffffff16611d749092919063ffffffff16565b610ce17fe9a5a82bc09a3a625001567824097de0dc413613bf07ad7e3f0c1c69e16ebd9360001b611ce8565b610d0d7f3db7a303cf95ee7acf0bb80faa90bb0180afdfdbc0e15e7ae074ae4cc070f20660001b611ce8565b80604051610d1b9190612a12565b60405180910390208373ffffffffffffffffffffffffffffffffffffffff167f85ae6d831512376400488016311b492ca5b46fa41ec4b6cce79054478ced242460405160405180910390a39695505050505050565b600080610d9f7fe0f600ed2b7ae1c534bfc8ea868c4d00f57162fead3790cd6e141dce21f1fb8c60001b611ce8565b610dcb7fbc495162ef4e73b94962be5fe48a722c751e646c15103f8a9da383439b474b7160001b611ce8565b610df77fd939534a50ecd5709f02e62ab25e83219f7e2e7f3a50c82cbfe6a6f8bb1f243e60001b611ce8565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e6a439058b8b6040518363ffffffff1660e01b8152600401610e55929190612ab9565b60206040518083038186803b158015610e6d57600080fd5b505afa158015610e81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea59190612af7565b9050610ed37fc72d1aa75cfacc7ecf0234e8fdf292d0c93a3b2e45a002848af7281f4bf52b8560001b611ce8565b610eff7fcd29a4727d5eb6976b96e71ded0746beca205839641e099b18a421c659a13f7d60001b611ce8565b610f2c33308a8473ffffffffffffffffffffffffffffffffffffffff16611ceb909392919063ffffffff16565b610f587f5c68936a14b5c18267b3dbecf6281310de7ab1b44e66df45dae82e7936d799a560001b611ce8565b610f847fa02d6f4b666a549390be58b236c7f9c71349aa4927d32dd352891a364a356c6b60001b611ce8565b8073ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168a6040518363ffffffff1660e01b8152600401610fe1929190612898565b602060405180830381600087803b158015610ffb57600080fd5b505af115801561100f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103391906128f9565b506110607f42b1d1f2d4daae5d6a7aaa9f465e0b6bef33086cfb556dd3d93b9087edb8b6fd60001b611ce8565b61108c7f3926acc0b3bc0055f126661853df1483312a3e813597088e092e043150a11ff960001b611ce8565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663baa2abde8b8b8b8b8b8b8b6040518863ffffffff1660e01b81526004016110f39796959493929190612b24565b6040805180830381600087803b15801561110c57600080fd5b505af1158015611120573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111449190612b93565b80935081945050506111787f3619f2d2b7e675c52aa75a1bad5089987d9e1ad6dca123ca4e63b613b22afc0360001b611ce8565b6111a47ff4dde84775e08d180e359c3ff63341f4be18cea92d4a3fc317d9a1704e757deb60001b611ce8565b878573ffffffffffffffffffffffffffffffffffffffff167f1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d85856040516111ed92919061241a565b60405180910390a35097509795505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006112547ff316acf54dc3c9a0041ceed0a05f81603454830b183259859a57f4a8d453105f60001b611ce8565b6112807f1e93a34ff03f275991cabeb51b8712f3fc506c4d8ed004fea9bad7c33b9d30bd60001b611ce8565b6112ac7f69f09d714ea64b481c8f0f6a22e6484b6c16fd929c2049e5aac361a4a35bacd560001b611ce8565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c9c6539684846040518363ffffffff1660e01b8152600401611307929190612ab9565b602060405180830381600087803b15801561132157600080fd5b505af1158015611335573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113599190612af7565b90506113877f1425472ee073cbf9a4f05af5a8f1c2837abd9529911cdae9fd807fe28c1e9e4960001b611ce8565b6113b37f19c300d029a8397f5621c3c326161d23aa803a744448ec8a4255b0db2441ff1860001b611ce8565b8073ffffffffffffffffffffffffffffffffffffffff167fa92a2b95c8d8436f6ac4c673c61487364f877efb9534d4296fad8ef904546c9484846040516113fb929190612ab9565b60405180910390a292915050565b60606114377f2e58bc5e029a94791a8e211fdf9ad1a83b80cac1c553529c11ceca841a53e36160001b611ce8565b6114637fa6c9e066287e196b9b4d0c2eca74ccc16bcd054e2d9ae70c10b4d08f11cbd8f160001b611ce8565b61148f7f03b2ad5e6482eda2ee4d487de08949cdfdfcba659bf2ed0142adbafbe1f4add360001b611ce8565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8585856040518463ffffffff1660e01b81526004016114ee9392919061265d565b60006040518083038186803b15801561150657600080fd5b505afa15801561151a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061154391906127f3565b90509392505050565b600061157a7f4784b5996e3ce0c9bc05a64b1110a2baea2b0d8e3ccd91e2c53acab7b425126360001b611ce8565b6115a67f68ed2d56550e42f7c888e8e6ce5909a79f4ae19bc19371dfb86ab757efd41bab60001b611ce8565b6115d27fca8a8fcab604bc82d75b66dc0b1b5a3cd0cd7726b7965260d71b610f5ab0ff6260001b611ce8565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e6a4390584846040518363ffffffff1660e01b815260040161162d929190612ab9565b60206040518083038186803b15801561164557600080fd5b505afa158015611659573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167d9190612af7565b905092915050565b60008060006116b67fcdad438695c8c60396247f4c2608ca079fe1fb947ac37ad3b42b4c941e941fd060001b611ce8565b6116e27fbbc0b98cf8119da0a7727fb4d23e44cbe19984527e111b759114b625430b3a4160001b611ce8565b61170e7fb4141a1b9c986ca9fdb3647c0d5bfb22f12d19bb4d44ffea4c66823c8514e8de60001b611ce8565b61173b33308b8e73ffffffffffffffffffffffffffffffffffffffff16611ceb909392919063ffffffff16565b6117677f122d288a9aeff636b69d7aee50d4d09506f26fd8b49d00f8162b8d367c4f926660001b611ce8565b6117937f6db154b78db6bea85f7fdbb5841e3abea45a1790a1ff4e6e91e17eb2f65e14af60001b611ce8565b6117c033308a8d73ffffffffffffffffffffffffffffffffffffffff16611ceb909392919063ffffffff16565b6117ec7f80584ec823c535ff22de1f3009e7f27da07e45388177e1e0910de85dae69635860001b611ce8565b6118187fb7ddf6d4ee7638ab89f1b7611ff901dcff43bbcbc7a0fe00ab8b83196797a48560001b611ce8565b8a73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168b6040518363ffffffff1660e01b8152600401611875929190612898565b602060405180830381600087803b15801561188f57600080fd5b505af11580156118a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c791906128f9565b506118f47fc87a3d2a532e0e3452949e0c4c7e3f29d22cf39dca898e583fabd523ff10774460001b611ce8565b6119207fd0a605aad81d56be8569513ca6b65f5e4ba6cd3b6dbaeee54d340c8d9241e3f460001b611ce8565b8973ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168a6040518363ffffffff1660e01b815260040161197d929190612898565b602060405180830381600087803b15801561199757600080fd5b505af11580156119ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119cf91906128f9565b506119fc7fc9de09ad0ed2c4bdc94c522c93fdacc0630f657d743877aa57e5548deb8383bc60001b611ce8565b611a287f5b4a50b6ec07b761dcdc0d26890b1e9add193040df1674fa3cf6be98cdae726960001b611ce8565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e8e337008c8c8c8c8c8c8c8c6040518963ffffffff1660e01b8152600401611a91989796959493929190612bd3565b606060405180830381600087803b158015611aab57600080fd5b505af1158015611abf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ae39190612c51565b809350819450829550505050611b1b7f3864f52bc26f0935bba91b3dab7ae74244ddbc927782464a140067035d6ab6f560001b611ce8565b611b477fb772c9640b3a90122a504f6b7f8a180a125ad46ebaf3d38eac217bf844ea025d60001b611ce8565b611b7d33848b611b579190612a85565b8d73ffffffffffffffffffffffffffffffffffffffff16611d749092919063ffffffff16565b611ba97f2b965cd23fa9047bbd06044a8fd29137bee195b3ea97d2feb09096141446be9460001b611ce8565b611bd57f70406b162685d2bad23b3897722d85f184a1157682cd279b0c41f90523f24a6d60001b611ce8565b611c0b33838a611be59190612a85565b8c73ffffffffffffffffffffffffffffffffffffffff16611d749092919063ffffffff16565b611c377fb8abea613b54aa25c85c74ed74eeb8bd0714dd7105329c8ad04c2913a07c00b460001b611ce8565b611c637fb90df3b8da283bb0f8d1fd88aabf0a97e51443b7080f5b9c1c75f9fcb7e088a360001b611ce8565b808573ffffffffffffffffffffffffffffffffffffffff167f64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e8585604051611cac92919061241a565b60405180910390a3985098509895505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b611d6e846323b872dd60e01b858585604051602401611d0c93929190612ca4565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611dfa565b50505050565b611df58363a9059cbb60e01b8484604051602401611d93929190612898565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611dfa565b505050565b6000611e5c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611ec19092919063ffffffff16565b9050600081511115611ebc5780806020019051810190611e7c91906128f9565b611ebb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eb290612d5e565b60405180910390fd5b5b505050565b6060611ed08484600085611ed9565b90509392505050565b606082471015611f1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f1590612df0565b60405180910390fd5b611f2785611fed565b611f66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f5d90612e5c565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611f8f9190612ef6565b60006040518083038185875af1925050503d8060008114611fcc576040519150601f19603f3d011682016040523d82523d6000602084013e611fd1565b606091505b5091509150611fe1828286612000565b92505050949350505050565b600080823b905060008111915050919050565b6060831561201057829050612060565b6000835111156120235782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120579190612f51565b60405180910390fd5b9392505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61208e8161207b565b811461209957600080fd5b50565b6000813590506120ab81612085565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126120d6576120d56120b1565b5b8235905067ffffffffffffffff8111156120f3576120f26120b6565b5b60208301915083602082028301111561210f5761210e6120bb565b5b9250929050565b60008060006040848603121561212f5761212e612071565b5b600061213d8682870161209c565b935050602084013567ffffffffffffffff81111561215e5761215d612076565b5b61216a868287016120c0565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6121ab8161207b565b82525050565b60006121bd83836121a2565b60208301905092915050565b6000602082019050919050565b60006121e182612176565b6121eb8185612181565b93506121f683612192565b8060005b8381101561222757815161220e88826121b1565b9750612219836121c9565b9250506001810190506121fa565b5085935050505092915050565b6000602082019050818103600083015261224e81846121d6565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061228182612256565b9050919050565b61229181612276565b811461229c57600080fd5b50565b6000813590506122ae81612288565b92915050565b60008060008060008060a087890312156122d1576122d0612071565b5b60006122df89828a0161209c565b96505060206122f089828a0161209c565b955050604087013567ffffffffffffffff81111561231157612310612076565b5b61231d89828a016120c0565b9450945050606061233089828a0161229f565b925050608061234189828a0161209c565b9150509295509295509295565b6123578161207b565b82525050565b6000602082019050612372600083018461234e565b92915050565b600080600080600080600060e0888a03121561239757612396612071565b5b60006123a58a828b0161229f565b97505060206123b68a828b0161229f565b96505060406123c78a828b0161209c565b95505060606123d88a828b0161209c565b94505060806123e98a828b0161209c565b93505060a06123fa8a828b0161229f565b92505060c061240b8a828b0161209c565b91505092959891949750929550565b600060408201905061242f600083018561234e565b61243c602083018461234e565b9392505050565b61244c81612276565b82525050565b60006020820190506124676000830184612443565b92915050565b6000806040838503121561248457612483612071565b5b60006124928582860161229f565b92505060206124a38582860161229f565b9150509250929050565b600080600080600080600080610100898b0312156124ce576124cd612071565b5b60006124dc8b828c0161229f565b98505060206124ed8b828c0161229f565b97505060406124fe8b828c0161209c565b965050606061250f8b828c0161209c565b95505060806125208b828c0161209c565b94505060a06125318b828c0161209c565b93505060c06125428b828c0161229f565b92505060e06125538b828c0161209c565b9150509295985092959890939650565b6000606082019050612578600083018661234e565b612585602083018561234e565b612592604083018461234e565b949350505050565b600082825260208201905092915050565b6000819050919050565b6125be81612276565b82525050565b60006125d083836125b5565b60208301905092915050565b60006125eb602084018461229f565b905092915050565b6000602082019050919050565b600061260c838561259a565b9350612617826125ab565b8060005b858110156126505761262d82846125dc565b61263788826125c4565b9750612642836125f3565b92505060018101905061261b565b5085925050509392505050565b6000604082019050612672600083018661234e565b8181036020830152612685818486612600565b9050949350505050565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6126d88261268f565b810181811067ffffffffffffffff821117156126f7576126f66126a0565b5b80604052505050565b600061270a612067565b905061271682826126cf565b919050565b600067ffffffffffffffff821115612736576127356126a0565b5b602082029050602081019050919050565b60008151905061275681612085565b92915050565b600061276f61276a8461271b565b612700565b90508083825260208201905060208402830185811115612792576127916120bb565b5b835b818110156127bb57806127a78882612747565b845260208401935050602081019050612794565b5050509392505050565b600082601f8301126127da576127d96120b1565b5b81516127ea84826020860161275c565b91505092915050565b60006020828403121561280957612808612071565b5b600082015167ffffffffffffffff81111561282757612826612076565b5b612833848285016127c5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561288157612880612071565b5b600061288f8482850161229f565b91505092915050565b60006040820190506128ad6000830185612443565b6128ba602083018461234e565b9392505050565b60008115159050919050565b6128d6816128c1565b81146128e157600080fd5b50565b6000815190506128f3816128cd565b92915050565b60006020828403121561290f5761290e612071565b5b600061291d848285016128e4565b91505092915050565b600060a08201905061293b600083018961234e565b612948602083018861234e565b818103604083015261295b818688612600565b905061296a6060830185612443565b612977608083018461234e565b979650505050505050565b600081905092915050565b6129968161207b565b82525050565b60006129a8838361298d565b60208301905092915050565b60006129bf82612176565b6129c98185612982565b93506129d483612192565b8060005b83811015612a055781516129ec888261299c565b97506129f7836121c9565b9250506001810190506129d8565b5085935050505092915050565b6000612a1e82846129b4565b915081905092915050565b600060208284031215612a3f57612a3e612071565b5b6000612a4d84828501612747565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612a908261207b565b9150612a9b8361207b565b925082821015612aae57612aad612a56565b5b828203905092915050565b6000604082019050612ace6000830185612443565b612adb6020830184612443565b9392505050565b600081519050612af181612288565b92915050565b600060208284031215612b0d57612b0c612071565b5b6000612b1b84828501612ae2565b91505092915050565b600060e082019050612b39600083018a612443565b612b466020830189612443565b612b53604083018861234e565b612b60606083018761234e565b612b6d608083018661234e565b612b7a60a0830185612443565b612b8760c083018461234e565b98975050505050505050565b60008060408385031215612baa57612ba9612071565b5b6000612bb885828601612747565b9250506020612bc985828601612747565b9150509250929050565b600061010082019050612be9600083018b612443565b612bf6602083018a612443565b612c03604083018961234e565b612c10606083018861234e565b612c1d608083018761234e565b612c2a60a083018661234e565b612c3760c0830185612443565b612c4460e083018461234e565b9998505050505050505050565b600080600060608486031215612c6a57612c69612071565b5b6000612c7886828701612747565b9350506020612c8986828701612747565b9250506040612c9a86828701612747565b9150509250925092565b6000606082019050612cb96000830186612443565b612cc66020830185612443565b612cd3604083018461234e565b949350505050565b600082825260208201905092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612d48602a83612cdb565b9150612d5382612cec565b604082019050919050565b60006020820190508181036000830152612d7781612d3b565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000612dda602683612cdb565b9150612de582612d7e565b604082019050919050565b60006020820190508181036000830152612e0981612dcd565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612e46601d83612cdb565b9150612e5182612e10565b602082019050919050565b60006020820190508181036000830152612e7581612e39565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015612eb0578082015181840152602081019050612e95565b83811115612ebf576000848401525b50505050565b6000612ed082612e7c565b612eda8185612e87565b9350612eea818560208601612e92565b80840191505092915050565b6000612f028284612ec5565b915081905092915050565b600081519050919050565b6000612f2382612f0d565b612f2d8185612cdb565b9350612f3d818560208601612e92565b612f468161268f565b840191505092915050565b60006020820190508181036000830152612f6b8184612f18565b90509291505056fea2646970667358221220a1760df1a4181996f808572697feac55165107ba86adfa1a872189e58214468c64736f6c63430008090033";

type AdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Adapter__factory extends ContractFactory {
  constructor(...args: AdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _factory: string,
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Adapter> {
    return super.deploy(_factory, _router, overrides || {}) as Promise<Adapter>;
  }
  getDeployTransaction(
    _factory: string,
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_factory, _router, overrides || {});
  }
  attach(address: string): Adapter {
    return super.attach(address) as Adapter;
  }
  connect(signer: Signer): Adapter__factory {
    return super.connect(signer) as Adapter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdapterInterface {
    return new utils.Interface(_abi) as AdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Adapter {
    return new Contract(address, _abi, signerOrProvider) as Adapter;
  }
}

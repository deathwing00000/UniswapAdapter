/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WrpEth, WrpEthInterface } from "../WrpEth";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200134a3803806200134a833981016040819052620000349162000251565b8151829082906200004d906003906020850190620000de565b50805162000063906004906020840190620000de565b505050620000806200007a6200008860201b60201c565b6200008c565b5050620002f8565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000ec90620002bb565b90600052602060002090601f0160209004810192826200011057600085556200015b565b82601f106200012b57805160ff19168380011785556200015b565b828001600101855582156200015b579182015b828111156200015b5782518255916020019190600101906200013e565b50620001699291506200016d565b5090565b5b808211156200016957600081556001016200016e565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001ac57600080fd5b81516001600160401b0380821115620001c957620001c962000184565b604051601f8301601f19908116603f01168101908282118183101715620001f457620001f462000184565b816040528381526020925086838588010111156200021157600080fd5b600091505b8382101562000235578582018301518183018401529082019062000216565b83821115620002475760008385830101525b9695505050505050565b600080604083850312156200026557600080fd5b82516001600160401b03808211156200027d57600080fd5b6200028b868387016200019a565b93506020850151915080821115620002a257600080fd5b50620002b1858286016200019a565b9150509250929050565b600181811c90821680620002d057607f821691505b60208210811415620002f257634e487b7160e01b600052602260045260246000fd5b50919050565b61104280620003086000396000f3fe6080604052600436106100c35760003560e01c806306fdde03146100c8578063095ea7b3146100f357806318160ddd1461012357806323b872dd146101425780632e1a7d4d14610162578063313ce5671461018457806339509351146101a057806347e7ef24146101c057806370a08231146101d3578063715018a6146102095780638da5cb5b1461021e57806395d89b411461024b578063a457c2d714610260578063a9059cbb14610280578063dd62ed3e146102a0578063f2fde38b146102c0575b600080fd5b3480156100d457600080fd5b506100dd6102e0565b6040516100ea9190610df9565b60405180910390f35b3480156100ff57600080fd5b5061011361010e366004610e6a565b610372565b60405190151581526020016100ea565b34801561012f57600080fd5b506002545b6040519081526020016100ea565b34801561014e57600080fd5b5061011361015d366004610e94565b610388565b34801561016e57600080fd5b5061018261017d366004610ed0565b61044e565b005b34801561019057600080fd5b50604051601281526020016100ea565b3480156101ac57600080fd5b506101136101bb366004610e6a565b6104ef565b6101826101ce366004610e6a565b61052b565b3480156101df57600080fd5b506101346101ee366004610ee9565b6001600160a01b031660009081526020819052604090205490565b34801561021557600080fd5b5061018261063d565b34801561022a57600080fd5b50610233610678565b6040516001600160a01b0390911681526020016100ea565b34801561025757600080fd5b506100dd610687565b34801561026c57600080fd5b5061011361027b366004610e6a565b610696565b34801561028c57600080fd5b5061011361029b366004610e6a565b61072f565b3480156102ac57600080fd5b506101346102bb366004610f04565b61073b565b3480156102cc57600080fd5b506101826102db366004610ee9565b610766565b6060600380546102ef90610f37565b80601f016020809104026020016040519081016040528092919081815260200182805461031b90610f37565b80156103685780601f1061033d57610100808354040283529160200191610368565b820191906000526020600020905b81548152906001019060200180831161034b57829003601f168201915b5050505050905090565b600061037f338484610806565b50600192915050565b60006001600160a01b038416331461043a57816103a5853361073b565b10156104035760405162461bcd60e51b815260206004820152602260248201527f5772704574683a20416d6f756e7420657863636565647320616c6c6f77616e63604482015261329760f11b60648201526084015b60405180910390fd5b600082610410863361073b565b61041a9190610f88565b90506104268582610372565b5061043285858561092a565b915050610447565b61044483836109d4565b90505b9392505050565b61045833826109e1565b604051600090339083908381818185875af1925050503d806000811461049a576040519150601f19603f3d011682016040523d82523d6000602084013e61049f565b606091505b50509050806104eb5760405162461bcd60e51b81526020600482015260186024820152772bb93822ba341d102bb4ba34323930bb903330b4b632b21760411b60448201526064016103fa565b5050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161037f918590610526908690610f9f565b610806565b803410156105875760405162461bcd60e51b815260206004820152602360248201527f5772704574683a204e6f7420656e6f7567682065746820666f72206465706f7360448201526234ba1760e91b60648201526084016103fa565b6105918282610b1d565b803411156104eb576000336105a68334610f88565b604051600081818185875af1925050503d80600081146105e2576040519150601f19603f3d011682016040523d82523d6000602084013e6105e7565b606091505b50509050806106385760405162461bcd60e51b815260206004820152601e60248201527f5772704574683a204368616e67652072657475726e73206661696c65642e000060448201526064016103fa565b505050565b33610646610678565b6001600160a01b03161461066c5760405162461bcd60e51b81526004016103fa90610fb7565b6106766000610bea565b565b6005546001600160a01b031690565b6060600480546102ef90610f37565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156107185760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103fa565b6107253385858403610806565b5060019392505050565b600061044783836109d4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3361076f610678565b6001600160a01b0316146107955760405162461bcd60e51b81526004016103fa90610fb7565b6001600160a01b0381166107fa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103fa565b61080381610bea565b50565b6001600160a01b0383166108685760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103fa565b6001600160a01b0382166108c95760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103fa565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610937848484610c3c565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156109bc5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084016103fa565b6109c98533858403610806565b506001949350505050565b600061037f338484610c3c565b6001600160a01b038216610a415760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103fa565b6001600160a01b03821660009081526020819052604090205481811015610ab55760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103fa565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ae4908490610f88565b90915550506040518281526000906001600160a01b03851690600080516020610fed8339815191529060200160405180910390a3505050565b6001600160a01b038216610b735760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103fa565b8060026000828254610b859190610f9f565b90915550506001600160a01b03821660009081526020819052604081208054839290610bb2908490610f9f565b90915550506040518181526001600160a01b03831690600090600080516020610fed8339815191529060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038316610ca05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103fa565b6001600160a01b038216610d025760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103fa565b6001600160a01b03831660009081526020819052604090205481811015610d7a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103fa565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610db1908490610f9f565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610fed83398151915284604051610deb91815260200190565b60405180910390a350505050565b600060208083528351808285015260005b81811015610e2657858101830151858201604001528201610e0a565b81811115610e38576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610e6557600080fd5b919050565b60008060408385031215610e7d57600080fd5b610e8683610e4e565b946020939093013593505050565b600080600060608486031215610ea957600080fd5b610eb284610e4e565b9250610ec060208501610e4e565b9150604084013590509250925092565b600060208284031215610ee257600080fd5b5035919050565b600060208284031215610efb57600080fd5b61044782610e4e565b60008060408385031215610f1757600080fd5b610f2083610e4e565b9150610f2e60208401610e4e565b90509250929050565b600181811c90821680610f4b57607f821691505b60208210811415610f6c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610f9a57610f9a610f72565b500390565b60008219821115610fb257610fb2610f72565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220e41e560834d563cddbdcbf273c1a7d68cbb735b2089a9e3fa0d169669a0b328e64736f6c63430008090033";

type WrpEthConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WrpEthConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WrpEth__factory extends ContractFactory {
  constructor(...args: WrpEthConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WrpEth> {
    return super.deploy(name, symbol, overrides || {}) as Promise<WrpEth>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  attach(address: string): WrpEth {
    return super.attach(address) as WrpEth;
  }
  connect(signer: Signer): WrpEth__factory {
    return super.connect(signer) as WrpEth__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WrpEthInterface {
    return new utils.Interface(_abi) as WrpEthInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WrpEth {
    return new Contract(address, _abi, signerOrProvider) as WrpEth;
  }
}
